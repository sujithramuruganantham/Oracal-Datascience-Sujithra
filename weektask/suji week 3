{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyPSRrJHNAf0l2S45E9aYvV3"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":2,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qyuENHm29Rdq","executionInfo":{"status":"ok","timestamp":1742883852044,"user_tz":-330,"elapsed":8,"user":{"displayName":"Sujithra Muruganantham","userId":"03244084556517055698"}},"outputId":"44c91b07-df50-49d2-fb8c-6b62c7a3536f"},"outputs":[{"output_type":"stream","name":"stdout","text":["hello,excited to start data science\n"]}],"source":["print(\"hello,excited to start data science\")"]},{"cell_type":"code","source":["customer_name=\"john doe\"\n","customer_age=28\n","customer_balance=120.75\n","print(\"customer:\",customer_name)\n","print(\"balance:\",customer_balance)\n","print(\"age:\",customer_balance)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1Edq7dfj9_zY","executionInfo":{"status":"ok","timestamp":1742884108960,"user_tz":-330,"elapsed":7,"user":{"displayName":"Sujithra Muruganantham","userId":"03244084556517055698"}},"outputId":"2d808cb8-578f-4aeb-e393-ff27361380ed"},"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["customer: john doe\n","balance: 120.75\n","age: 120.75\n"]}]},{"cell_type":"code","source":["product_price=200\n","discount=product_price*0.10#10%discount\n","final_price=product_price-discount\n","print(\"final price after discount:\",final_price)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Fuv-g2i8_RV6","executionInfo":{"status":"ok","timestamp":1742884378102,"user_tz":-330,"elapsed":25,"user":{"displayName":"Sujithra Muruganantham","userId":"03244084556517055698"}},"outputId":"a0b909b8-9cc1-49fd-b3df-e41e3e9204c2"},"execution_count":9,"outputs":[{"output_type":"stream","name":"stdout","text":["final price after discount: 180.0\n"]}]},{"cell_type":"code","source":["import numpy as np\n","sales=np.array([150,200,250,300,350,400,500])#scales for each day\n","print(\"sales data:\",sales)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"C_OhVgylASI5","executionInfo":{"status":"ok","timestamp":1742884547038,"user_tz":-330,"elapsed":38,"user":{"displayName":"Sujithra Muruganantham","userId":"03244084556517055698"}},"outputId":"a37a6a57-d950-4f88-9b84-fc79c947eaad"},"execution_count":11,"outputs":[{"output_type":"stream","name":"stdout","text":["sales data: [150 200 250 300 350 400 500]\n"]}]},{"cell_type":"code","source":["print(\"average sales:\",np.mean(sales))\n","print(\"highest sale:\",np.max(sales))\n","print(\"lowest sale:\",np.min(sales))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"iQi0UC6TA7ho","executionInfo":{"status":"ok","timestamp":1742884744516,"user_tz":-330,"elapsed":24,"user":{"displayName":"Sujithra Muruganantham","userId":"03244084556517055698"}},"outputId":"11f35b19-f5b7-49af-fee1-1c11fab27a79"},"execution_count":13,"outputs":[{"output_type":"stream","name":"stdout","text":["average sales: 307.14285714285717\n","highest sale: 500\n","lowest sale: 150\n"]}]},{"cell_type":"code","source":["import pandas as pd\n","data={\n","    \"customer\":[\"alice\",\"bob\",\"charlie\"],\n","    \"age\":[25,30,35],\n","    \"amount spent\":[120,200,150]\n","}\n","\n","df = pd.DataFrame(data)\n","print(df)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"S4Gs84x3Brex","executionInfo":{"status":"ok","timestamp":1742885285610,"user_tz":-330,"elapsed":15,"user":{"displayName":"Sujithra Muruganantham","userId":"03244084556517055698"}},"outputId":"41a7598f-56c0-4c28-d018-36cd64e65252"},"execution_count":19,"outputs":[{"output_type":"stream","name":"stdout","text":["  customer  age  amount spent\n","0    alice   25           120\n","1      bob   30           200\n","2  charlie   35           150\n"]}]},{"cell_type":"code","source":["from google.colab import files\n","uploaded=files.upload()\n","df=pd.read_csv(\"customer_data.csv\")\n","df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":455},"id":"5wQRR8ymDyL6","executionInfo":{"status":"ok","timestamp":1742886286640,"user_tz":-330,"elapsed":58985,"user":{"displayName":"Sujithra Muruganantham","userId":"03244084556517055698"}},"outputId":"20e21ccf-7c18-416e-ee53-6613705626a8"},"execution_count":24,"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","     <input type=\"file\" id=\"files-12b2e8e5-9859-4cd5-9927-db62d37a6379\" name=\"files[]\" multiple disabled\n","        style=\"border:none\" />\n","     <output id=\"result-12b2e8e5-9859-4cd5-9927-db62d37a6379\">\n","      Upload widget is only available when the cell has been executed in the\n","      current browser session. Please rerun this cell to enable.\n","      </output>\n","      <script>// Copyright 2017 Google LLC\n","//\n","// Licensed under the Apache License, Version 2.0 (the \"License\");\n","// you may not use this file except in compliance with the License.\n","// You may obtain a copy of the License at\n","//\n","//      http://www.apache.org/licenses/LICENSE-2.0\n","//\n","// Unless required by applicable law or agreed to in writing, software\n","// distributed under the License is distributed on an \"AS IS\" BASIS,\n","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n","// See the License for the specific language governing permissions and\n","// limitations under the License.\n","\n","/**\n"," * @fileoverview Helpers for google.colab Python module.\n"," */\n","(function(scope) {\n","function span(text, styleAttributes = {}) {\n","  const element = document.createElement('span');\n","  element.textContent = text;\n","  for (const key of Object.keys(styleAttributes)) {\n","    element.style[key] = styleAttributes[key];\n","  }\n","  return element;\n","}\n","\n","// Max number of bytes which will be uploaded at a time.\n","const MAX_PAYLOAD_SIZE = 100 * 1024;\n","\n","function _uploadFiles(inputId, outputId) {\n","  const steps = uploadFilesStep(inputId, outputId);\n","  const outputElement = document.getElementById(outputId);\n","  // Cache steps on the outputElement to make it available for the next call\n","  // to uploadFilesContinue from Python.\n","  outputElement.steps = steps;\n","\n","  return _uploadFilesContinue(outputId);\n","}\n","\n","// This is roughly an async generator (not supported in the browser yet),\n","// where there are multiple asynchronous steps and the Python side is going\n","// to poll for completion of each step.\n","// This uses a Promise to block the python side on completion of each step,\n","// then passes the result of the previous step as the input to the next step.\n","function _uploadFilesContinue(outputId) {\n","  const outputElement = document.getElementById(outputId);\n","  const steps = outputElement.steps;\n","\n","  const next = steps.next(outputElement.lastPromiseValue);\n","  return Promise.resolve(next.value.promise).then((value) => {\n","    // Cache the last promise value to make it available to the next\n","    // step of the generator.\n","    outputElement.lastPromiseValue = value;\n","    return next.value.response;\n","  });\n","}\n","\n","/**\n"," * Generator function which is called between each async step of the upload\n"," * process.\n"," * @param {string} inputId Element ID of the input file picker element.\n"," * @param {string} outputId Element ID of the output display.\n"," * @return {!Iterable<!Object>} Iterable of next steps.\n"," */\n","function* uploadFilesStep(inputId, outputId) {\n","  const inputElement = document.getElementById(inputId);\n","  inputElement.disabled = false;\n","\n","  const outputElement = document.getElementById(outputId);\n","  outputElement.innerHTML = '';\n","\n","  const pickedPromise = new Promise((resolve) => {\n","    inputElement.addEventListener('change', (e) => {\n","      resolve(e.target.files);\n","    });\n","  });\n","\n","  const cancel = document.createElement('button');\n","  inputElement.parentElement.appendChild(cancel);\n","  cancel.textContent = 'Cancel upload';\n","  const cancelPromise = new Promise((resolve) => {\n","    cancel.onclick = () => {\n","      resolve(null);\n","    };\n","  });\n","\n","  // Wait for the user to pick the files.\n","  const files = yield {\n","    promise: Promise.race([pickedPromise, cancelPromise]),\n","    response: {\n","      action: 'starting',\n","    }\n","  };\n","\n","  cancel.remove();\n","\n","  // Disable the input element since further picks are not allowed.\n","  inputElement.disabled = true;\n","\n","  if (!files) {\n","    return {\n","      response: {\n","        action: 'complete',\n","      }\n","    };\n","  }\n","\n","  for (const file of files) {\n","    const li = document.createElement('li');\n","    li.append(span(file.name, {fontWeight: 'bold'}));\n","    li.append(span(\n","        `(${file.type || 'n/a'}) - ${file.size} bytes, ` +\n","        `last modified: ${\n","            file.lastModifiedDate ? file.lastModifiedDate.toLocaleDateString() :\n","                                    'n/a'} - `));\n","    const percent = span('0% done');\n","    li.appendChild(percent);\n","\n","    outputElement.appendChild(li);\n","\n","    const fileDataPromise = new Promise((resolve) => {\n","      const reader = new FileReader();\n","      reader.onload = (e) => {\n","        resolve(e.target.result);\n","      };\n","      reader.readAsArrayBuffer(file);\n","    });\n","    // Wait for the data to be ready.\n","    let fileData = yield {\n","      promise: fileDataPromise,\n","      response: {\n","        action: 'continue',\n","      }\n","    };\n","\n","    // Use a chunked sending to avoid message size limits. See b/62115660.\n","    let position = 0;\n","    do {\n","      const length = Math.min(fileData.byteLength - position, MAX_PAYLOAD_SIZE);\n","      const chunk = new Uint8Array(fileData, position, length);\n","      position += length;\n","\n","      const base64 = btoa(String.fromCharCode.apply(null, chunk));\n","      yield {\n","        response: {\n","          action: 'append',\n","          file: file.name,\n","          data: base64,\n","        },\n","      };\n","\n","      let percentDone = fileData.byteLength === 0 ?\n","          100 :\n","          Math.round((position / fileData.byteLength) * 100);\n","      percent.textContent = `${percentDone}% done`;\n","\n","    } while (position < fileData.byteLength);\n","  }\n","\n","  // All done.\n","  yield {\n","    response: {\n","      action: 'complete',\n","    }\n","  };\n","}\n","\n","scope.google = scope.google || {};\n","scope.google.colab = scope.google.colab || {};\n","scope.google.colab._files = {\n","  _uploadFiles,\n","  _uploadFilesContinue,\n","};\n","})(self);\n","</script> "]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Saving customer_data.csv to customer_data.csv\n"]},{"output_type":"execute_result","data":{"text/plain":["   Index      Customer Id First Name Last Name  \\\n","0      1  DD37Cf93aecA6Dc     Sheryl    Baxter   \n","1      2  1Ef7b82A4CAAD10    Preston    Lozano   \n","2      3  6F94879bDAfE5a6        Roy     Berry   \n","3      4  5Cef8BFA16c5e3c      Linda     Olsen   \n","4      5  053d585Ab6b3159     Joanna    Bender   \n","\n","                           Company               City  \\\n","0                  Rasmussen Group       East Leonard   \n","1                      Vega-Gentry  East Jimmychester   \n","2                    Murillo-Perry      Isabelborough   \n","3  Dominguez, Mcmillan and Donovan         Bensonview   \n","4         Martin, Lang and Andrade     West Priscilla   \n","\n","                      Country                 Phone 1                Phone 2  \\\n","0                       Chile            229.077.5154       397.884.0519x718   \n","1                    Djibouti              5153435776       686-620-1820x944   \n","2         Antigua and Barbuda                   -1199    (496)978-3969x58947   \n","3          Dominican Republic  001-808-617-6467x12895                  -9892   \n","4  Slovakia (Slovak Republic)  001-234-203-0635x76146  001-199-446-3860x3486   \n","\n","                         Email Subscription Date                      Website  \n","0     zunigavanessa@smith.info        24-08-2020   http://www.stephenson.com/  \n","1              vmata@colon.com        23-04-2021        http://www.hobbs.com/  \n","2          beckycarr@hogan.com        25-03-2020     http://www.lawrence.com/  \n","3  stanleyblackwell@benson.org        02-06-2020   http://www.good-lyons.com/  \n","4      colinalvarado@miles.net        17-04-2021  https://goodwin-ingram.com/  "],"text/html":["\n","  <div id=\"df-99979524-c4af-4031-8f93-7adc45c6b602\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Index</th>\n","      <th>Customer Id</th>\n","      <th>First Name</th>\n","      <th>Last Name</th>\n","      <th>Company</th>\n","      <th>City</th>\n","      <th>Country</th>\n","      <th>Phone 1</th>\n","      <th>Phone 2</th>\n","      <th>Email</th>\n","      <th>Subscription Date</th>\n","      <th>Website</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>DD37Cf93aecA6Dc</td>\n","      <td>Sheryl</td>\n","      <td>Baxter</td>\n","      <td>Rasmussen Group</td>\n","      <td>East Leonard</td>\n","      <td>Chile</td>\n","      <td>229.077.5154</td>\n","      <td>397.884.0519x718</td>\n","      <td>zunigavanessa@smith.info</td>\n","      <td>24-08-2020</td>\n","      <td>http://www.stephenson.com/</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>1Ef7b82A4CAAD10</td>\n","      <td>Preston</td>\n","      <td>Lozano</td>\n","      <td>Vega-Gentry</td>\n","      <td>East Jimmychester</td>\n","      <td>Djibouti</td>\n","      <td>5153435776</td>\n","      <td>686-620-1820x944</td>\n","      <td>vmata@colon.com</td>\n","      <td>23-04-2021</td>\n","      <td>http://www.hobbs.com/</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>6F94879bDAfE5a6</td>\n","      <td>Roy</td>\n","      <td>Berry</td>\n","      <td>Murillo-Perry</td>\n","      <td>Isabelborough</td>\n","      <td>Antigua and Barbuda</td>\n","      <td>-1199</td>\n","      <td>(496)978-3969x58947</td>\n","      <td>beckycarr@hogan.com</td>\n","      <td>25-03-2020</td>\n","      <td>http://www.lawrence.com/</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>5Cef8BFA16c5e3c</td>\n","      <td>Linda</td>\n","      <td>Olsen</td>\n","      <td>Dominguez, Mcmillan and Donovan</td>\n","      <td>Bensonview</td>\n","      <td>Dominican Republic</td>\n","      <td>001-808-617-6467x12895</td>\n","      <td>-9892</td>\n","      <td>stanleyblackwell@benson.org</td>\n","      <td>02-06-2020</td>\n","      <td>http://www.good-lyons.com/</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>053d585Ab6b3159</td>\n","      <td>Joanna</td>\n","      <td>Bender</td>\n","      <td>Martin, Lang and Andrade</td>\n","      <td>West Priscilla</td>\n","      <td>Slovakia (Slovak Republic)</td>\n","      <td>001-234-203-0635x76146</td>\n","      <td>001-199-446-3860x3486</td>\n","      <td>colinalvarado@miles.net</td>\n","      <td>17-04-2021</td>\n","      <td>https://goodwin-ingram.com/</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-99979524-c4af-4031-8f93-7adc45c6b602')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-99979524-c4af-4031-8f93-7adc45c6b602 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-99979524-c4af-4031-8f93-7adc45c6b602');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d7ee9980-9930-434b-a553-e50e4402b327\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d7ee9980-9930-434b-a553-e50e4402b327')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d7ee9980-9930-434b-a553-e50e4402b327 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 100,\n  \"fields\": [\n    {\n      \"column\": \"Index\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 29,\n        \"min\": 1,\n        \"max\": 100,\n        \"num_unique_values\": 100,\n        \"samples\": [\n          84,\n          54,\n          71\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Customer Id\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 100,\n        \"samples\": [\n          \"78C06E9b6B3DF20\",\n          \"c09952De6Cda8aA\",\n          \"CBCd2Ac8E3eBDF9\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"First Name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 93,\n        \"samples\": [\n          \"Luis\",\n          \"Shane\",\n          \"Kathy\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Last Name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 97,\n        \"samples\": [\n          \"Hutchinson\",\n          \"Dunn\",\n          \"Atkinson\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Company\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 99,\n        \"samples\": [\n          \"Caldwell Group\",\n          \"Monroe PLC\",\n          \"Ware, Burns and Oneal\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"City\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 100,\n        \"samples\": [\n          \"South Joshuashire\",\n          \"New Deborah\",\n          \"Nicolasfort\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Country\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 85,\n        \"samples\": [\n          \"Bhutan\",\n          \"Chile\",\n          \"Dominica\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Phone 1\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 100,\n        \"samples\": [\n          \"8275702958\",\n          \"001-622-948-3641x24810\",\n          \"078-900-4760x76668\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Phone 2\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 100,\n        \"samples\": [\n          \"(804)842-4715\",\n          \"001-731-168-2893x8891\",\n          \"414-112-8700x68751\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Email\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 100,\n        \"samples\": [\n          \"justinwalters@jimenez.com\",\n          \"clinton85@colon-arias.org\",\n          \"lee48@manning.com\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Subscription Date\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 96,\n        \"samples\": [\n          \"18-02-2020\",\n          \"12-09-2021\",\n          \"21-10-2020\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Website\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 100,\n        \"samples\": [\n          \"http://www.garner-oliver.com/\",\n          \"https://kim.com/\",\n          \"https://ramsey.org/\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":24}]},{"cell_type":"code","source":["customer=df[df[\"Last Name\"]==\"Olsen\"]\n","print(customer)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Y7K7PD06Dyyo","executionInfo":{"status":"ok","timestamp":1742886798892,"user_tz":-330,"elapsed":34,"user":{"displayName":"Sujithra Muruganantham","userId":"03244084556517055698"}},"outputId":"e66be128-4c51-4fce-a802-a349f3e890f4"},"execution_count":28,"outputs":[{"output_type":"stream","name":"stdout","text":["   Index      Customer Id First Name Last Name  \\\n","3      4  5Cef8BFA16c5e3c      Linda     Olsen   \n","\n","                           Company        City             Country  \\\n","3  Dominguez, Mcmillan and Donovan  Bensonview  Dominican Republic   \n","\n","                  Phone 1 Phone 2                        Email  \\\n","3  001-808-617-6467x12895   -9892  stanleyblackwell@benson.org   \n","\n","  Subscription Date                     Website  \n","3        02-06-2020  http://www.good-lyons.com/  \n"]}]},{"cell_type":"code","source":["df_sort=df.sort_values(by=\"Subscription Date\",ascending=False)\n","print(df_sort)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"93hp_QCnI61Z","executionInfo":{"status":"ok","timestamp":1742887241602,"user_tz":-330,"elapsed":36,"user":{"displayName":"Sujithra Muruganantham","userId":"03244084556517055698"}},"outputId":"5b40f89c-4757-43c1-aea5-ccdd36082447"},"execution_count":32,"outputs":[{"output_type":"stream","name":"stdout","text":["    Index      Customer Id First Name    Last Name  \\\n","68     69  421a109cABDf5fa   Virginia       Dudley   \n","28     29  3B5dAAFA41AFa22   Stefanie  Fitzpatrick   \n","95     96  cb8E23e48d22Eae       Karl        Greer   \n","11     12  CEDec94deE6d69B      Jenna       Dodson   \n","92     93  aAb6AFc7AfD0fF3     Collin        Ayers   \n","..    ...              ...        ...          ...   \n","49     50  80F33Fd2AcebF05     Latoya       Mccann   \n","3       4  5Cef8BFA16c5e3c      Linda        Olsen   \n","64     65  636cBF0835E10ff     Eileen        Lynch   \n","39     40  17aD8e2dB3df03D     Sherry        Garza   \n","45     46  fD780ED8dbEae7B     Joanne       Montes   \n","\n","                            Company             City  \\\n","68                       Warren Ltd         Hartbury   \n","28                    Santana-Duran     Acevedoville   \n","95                        Carey LLC     East Richard   \n","11        Hoffman, Reed and Mcclain      East Andrea   \n","92                    Lamb-Peterson     South Lonnie   \n","..                              ...              ...   \n","49       Hobbs, Garrett and Sanford  Port Sergiofort   \n","3   Dominguez, Mcmillan and Donovan       Bensonview   \n","64       Knight, Abbott and Hubbard     Helenborough   \n","39                     Anderson Ltd        West John   \n","45       Price, Sexton and Mcdaniel    Gwendolynview   \n","\n","                             Country                 Phone 1  \\\n","68       French Southern Territories      027.846.3705x14184   \n","28  Saint Vincent and the Grenadines           (752)776-3286   \n","95                            Guyana     (188)169-1674x58692   \n","11                           Vietnam           (041)737-3846   \n","92                          Anguilla        404-645-5351x012   \n","..                               ...                     ...   \n","49                           Belarus     (530)287-4548x29481   \n","3                 Dominican Republic  001-808-617-6467x12895   \n","64                           Liberia   +1-158-951-4131x53578   \n","39                            Poland    001-067-713-6440x158   \n","45                             Palau           (897)726-7952   \n","\n","                  Phone 2                        Email Subscription Date  \\\n","68   +1-439-171-1846x4636         zvalencia@phelps.com        31-01-2021   \n","28  +1-472-021-4814x85074           wterrell@clark.com        30-07-2020   \n","95   001-841-293-3519x614             hhart@jensen.com        30-01-2022   \n","11  +1-556-888-3485x42608           mark42@robbins.com        29-11-2020   \n","92  001-257-582-8850x8516     dudleyemily@gonzales.biz        29-06-2021   \n","..                    ...                          ...               ...   \n","49     162-234-0249x32790         bobhammond@barry.biz        02-12-2021   \n","3                   -9892  stanleyblackwell@benson.org        02-06-2020   \n","64   001-673-779-6713x680        levigiles@vincent.com        02-01-2021   \n","39     (978)289-8785x5766             ann48@miller.com        01-11-2021   \n","45     (467)886-9467x5721            juan80@henson.net        01-07-2020   \n","\n","                       Website  \n","68  http://hunter-esparza.com/  \n","28         https://meyers.com/  \n","95     http://hayes-perez.com/  \n","11     http://www.douglas.net/  \n","92        http://www.ruiz.com/  \n","..                         ...  \n","49     https://www.burton.com/  \n","3   http://www.good-lyons.com/  \n","64           http://mckay.com/  \n","39          http://spence.com/  \n","45           http://ochoa.com/  \n","\n","[100 rows x 12 columns]\n"]}]},{"cell_type":"code","source":["df[\"Mobile number\"]=df['Phone 2']\n","print(df)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UfuXk035LO4b","executionInfo":{"status":"ok","timestamp":1742887367146,"user_tz":-330,"elapsed":78,"user":{"displayName":"Sujithra Muruganantham","userId":"03244084556517055698"}},"outputId":"77f15a5c-897f-454c-e20c-ef4bdacb0013"},"execution_count":33,"outputs":[{"output_type":"stream","name":"stdout","text":["    Index      Customer Id First Name Last Name  \\\n","0       1  DD37Cf93aecA6Dc     Sheryl    Baxter   \n","1       2  1Ef7b82A4CAAD10    Preston    Lozano   \n","2       3  6F94879bDAfE5a6        Roy     Berry   \n","3       4  5Cef8BFA16c5e3c      Linda     Olsen   \n","4       5  053d585Ab6b3159     Joanna    Bender   \n","..    ...              ...        ...       ...   \n","95     96  cb8E23e48d22Eae       Karl     Greer   \n","96     97  CeD220bdAaCfaDf       Lynn  Atkinson   \n","97     98  28CDbC0dFe4b1Db       Fred    Guerra   \n","98     99  c23d1D9EE8DEB0A     Yvonne    Farmer   \n","99    100  2354a0E336A91A1   Clarence    Haynes   \n","\n","                            Company               City  \\\n","0                   Rasmussen Group       East Leonard   \n","1                       Vega-Gentry  East Jimmychester   \n","2                     Murillo-Perry      Isabelborough   \n","3   Dominguez, Mcmillan and Donovan         Bensonview   \n","4          Martin, Lang and Andrade     West Priscilla   \n","..                              ...                ...   \n","95                        Carey LLC       East Richard   \n","96            Ware, Burns and Oneal       New Bradview   \n","97                    Schmitt-Jones         Ortegaland   \n","98               Fitzgerald-Harrell    Lake Elijahview   \n","99               Le, Nash and Cross          Judymouth   \n","\n","                       Country                 Phone 1  \\\n","0                        Chile            229.077.5154   \n","1                     Djibouti              5153435776   \n","2          Antigua and Barbuda                   -1199   \n","3           Dominican Republic  001-808-617-6467x12895   \n","4   Slovakia (Slovak Republic)  001-234-203-0635x76146   \n","..                         ...                     ...   \n","95                      Guyana     (188)169-1674x58692   \n","96                   Sri Lanka                   -3769   \n","97             Solomon Islands    +1-753-067-8419x7170   \n","98                       Aruba           (530)311-9786   \n","99                    Honduras           (753)813-6941   \n","\n","                   Phone 2                           Email Subscription Date  \\\n","0         397.884.0519x718        zunigavanessa@smith.info        24-08-2020   \n","1         686-620-1820x944                 vmata@colon.com        23-04-2021   \n","2      (496)978-3969x58947             beckycarr@hogan.com        25-03-2020   \n","3                    -9892     stanleyblackwell@benson.org        02-06-2020   \n","4    001-199-446-3860x3486         colinalvarado@miles.net        17-04-2021   \n","..                     ...                             ...               ...   \n","95    001-841-293-3519x614                hhart@jensen.com        30-01-2022   \n","96            605.413.3198               vkemp@ferrell.com        10-07-2021   \n","97   +1-632-666-7507x92121                swagner@kane.org        18-09-2021   \n","98  001-869-452-0943x12424  mccarthystephen@horn-green.biz        11-08-2021   \n","99            783.639.1472          colleen91@faulkner.biz        11-03-2020   \n","\n","                              Website           Mobile number  \n","0          http://www.stephenson.com/        397.884.0519x718  \n","1               http://www.hobbs.com/        686-620-1820x944  \n","2            http://www.lawrence.com/     (496)978-3969x58947  \n","3          http://www.good-lyons.com/                   -9892  \n","4         https://goodwin-ingram.com/   001-199-446-3860x3486  \n","..                                ...                     ...  \n","95            http://hayes-perez.com/    001-841-293-3519x614  \n","96         https://novak-allison.com/            605.413.3198  \n","97              https://www.ross.com/   +1-632-666-7507x92121  \n","98               http://watkins.info/  001-869-452-0943x12424  \n","99  http://www.hatfield-saunders.net/            783.639.1472  \n","\n","[100 rows x 13 columns]\n"]}]},{"cell_type":"code","source":["df.to_csv(\"cleaned_customer_data.csv\",index=False)\n","files.download(\"cleaned_customer_data.csv\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":17},"id":"pbupCeo0LrBJ","executionInfo":{"status":"ok","timestamp":1742887586263,"user_tz":-330,"elapsed":26,"user":{"displayName":"Sujithra Muruganantham","userId":"03244084556517055698"}},"outputId":"c045c32e-0630-4822-d534-26d4caee2099"},"execution_count":38,"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["\n","    async function download(id, filename, size) {\n","      if (!google.colab.kernel.accessAllowed) {\n","        return;\n","      }\n","      const div = document.createElement('div');\n","      const label = document.createElement('label');\n","      label.textContent = `Downloading \"${filename}\": `;\n","      div.appendChild(label);\n","      const progress = document.createElement('progress');\n","      progress.max = size;\n","      div.appendChild(progress);\n","      document.body.appendChild(div);\n","\n","      const buffers = [];\n","      let downloaded = 0;\n","\n","      const channel = await google.colab.kernel.comms.open(id);\n","      // Send a message to notify the kernel that we're ready.\n","      channel.send({})\n","\n","      for await (const message of channel.messages) {\n","        // Send a message to notify the kernel that we're ready.\n","        channel.send({})\n","        if (message.buffers) {\n","          for (const buffer of message.buffers) {\n","            buffers.push(buffer);\n","            downloaded += buffer.byteLength;\n","            progress.value = downloaded;\n","          }\n","        }\n","      }\n","      const blob = new Blob(buffers, {type: 'application/binary'});\n","      const a = document.createElement('a');\n","      a.href = window.URL.createObjectURL(blob);\n","      a.download = filename;\n","      div.appendChild(a);\n","      a.click();\n","      div.remove();\n","    }\n","  "]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["download(\"download_d8e8bca8-f860-4e71-8c17-5f451b721d56\", \"cleaned_customer_data.csv\", 18873)"]},"metadata":{}}]},{"cell_type":"code","source":[],"metadata":{"id":"lpxc6U94LtTC"},"execution_count":null,"outputs":[]}]}